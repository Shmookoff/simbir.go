"""empty message

Revision ID: 01fae5bea10e
Revises: a8cbe90c9e05
Create Date: 2023-10-30 08:12:19.822029

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import volga_it.database.column_types

# revision identifiers, used by Alembic.
revision: str = "01fae5bea10e"
down_revision: Union[str, None] = "a8cbe90c9e05"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transport",
        sa.Column("can_be_rented", sa.Boolean(), nullable=False),
        sa.Column(
            "transport_type",
            sa.Enum("Car", "Bike", "Scooter", native_enum=False),
            nullable=False,
        ),
        sa.Column("model", sa.String(), nullable=False),
        sa.Column("color", sa.String(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "location",
            volga_it.database.column_types.point.type.PointType(),
            nullable=False,
        ),
        sa.Column("minute_price", sa.Float(), nullable=True),
        sa.Column("day_price", sa.Float(), nullable=True),
        sa.Column("owner_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["owner_id"], ["accounts.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rents",
        sa.Column("time_start", sa.DateTime(), nullable=False),
        sa.Column("time_end", sa.DateTime(), nullable=True),
        sa.Column("price_of_unit", sa.Float(), nullable=False),
        sa.Column(
            "price_type", sa.Enum("Minutes", "Days", native_enum=False), nullable=False
        ),
        sa.Column("final_price", sa.Float(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("transport_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["transport_id"], ["transport.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["accounts.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "access_tokens",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "accounts",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "accounts",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "access_tokens",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table("rents")
    op.drop_table("transport")
    # ### end Alembic commands ###
