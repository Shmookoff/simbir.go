"""empty message

Revision ID: 433273fc1f02
Revises: 
Create Date: 2023-10-31 07:53:27.896600

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import volga_it.database.column_types
from volga_it.api.account.controller.authenticate import pwd_context

# revision identifiers, used by Alembic.
revision: str = "433273fc1f02"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_tokens",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    accounts_table = op.create_table(
        "accounts",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.bulk_insert(
        accounts_table,
        [
            {
                "username": "admin",
                "password": pwd_context.hash("admin"),
                "is_admin": True,
                "balance": 0,
            },
        ],
    )
    op.create_table(
        "transport",
        sa.Column("can_be_rented", sa.Boolean(), nullable=False),
        sa.Column(
            "transport_type",
            sa.Enum("Car", "Bike", "Scooter", native_enum=False),
            nullable=False,
        ),
        sa.Column("model", sa.String(), nullable=False),
        sa.Column("color", sa.String(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "location",
            volga_it.database.column_types.point.type.PointType(),
            nullable=False,
        ),
        sa.Column("minute_price", sa.Float(), nullable=True),
        sa.Column("day_price", sa.Float(), nullable=True),
        sa.Column("owner_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["owner_id"], ["accounts.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rents",
        sa.Column("time_start", sa.DateTime(), nullable=False),
        sa.Column("time_end", sa.DateTime(), nullable=True),
        sa.Column("price_of_unit", sa.Float(), nullable=False),
        sa.Column(
            "price_type", sa.Enum("Minutes", "Days", native_enum=False), nullable=False
        ),
        sa.Column("final_price", sa.Float(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("transport_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["transport_id"], ["transport.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["accounts.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rents")
    op.drop_table("transport")
    op.drop_table("accounts")
    op.drop_table("access_tokens")
    # ### end Alembic commands ###
